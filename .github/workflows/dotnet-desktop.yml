name: .NET Core with Docker and Kubernetes Deployment

on:
  push:
    branches: [ "master" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      # .NET build and test steps
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      # - name: Test
      #   run: dotnet test UnitTests --no-build --verbosity normal

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=PBSW_Exam.sln

      # Docker build and push steps using docker-compose
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.SECRET_USER }}
          password: ${{ secrets.SECRET_PASS }}

      - name: Build and push Docker images using docker-compose
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      # Set up Kubernetes
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Set KUBECONFIG env variable
        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Debug Kubeconfig
        run: |
          ls -la $HOME/.kube
          cat $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/seq-pvc.yaml --validate=false
          kubectl apply -f k8s/zipkin-storage-pvc.yaml --validate=false
          kubectl apply -f k8s/mssql-pvc.yaml --validate=false
          kubectl apply -f k8s/mssql-deployment.yaml --validate=false
          kubectl apply -f k8s/mssql-service.yaml --validate=false
          kubectl apply -f k8s/zipkin-storage-deployment.yaml --validate=false
          kubectl apply -f k8s/zipkin-storage-service.yaml --validate=false
          kubectl apply -f k8s/rabbitmq-deployment.yaml --validate=false
          kubectl apply -f k8s/rabbitmq-service.yaml --validate=false
          kubectl apply -f k8s/seq-deployment.yaml --validate=false
          kubectl apply -f k8s/seq-service.yaml --validate=false
          kubectl apply -f k8s/zipkin-deployment.yaml --validate=false
          kubectl apply -f k8s/zipkin-service.yaml --validate=false
          kubectl apply -f k8s/userservice-deployment.yaml --validate=false
          kubectl apply -f k8s/userservice-service.yaml --validate=false
          kubectl apply -f k8s/authorisationservice-deployment.yaml --validate=false
          kubectl apply -f k8s/authorisationservice-service.yaml --validate=false
          kubectl apply -f k8s/apigateway-deployment.yaml --validate=false
          kubectl apply -f k8s/apigateway-service.yaml --validate=false